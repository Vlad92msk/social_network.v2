@import "@ui/styles/for_components";

$change-container--height: rem(30);
$response--height: rem(50);
$meta-info--height: rem(30);
$text--min-height: rem(50);
$text--max-height: rem(200);
$media-container--max-height: rem(800);
$author--max-width: rem(30);
$padding: rem(6);

@function get-grid-template($type, $is-post) {
  $author: "author";
  $change-container: "change-container change-container";

  @if $is-post {
    $author: "change-container";
  }
}


.Publication {
  $this: &;
  container-type: inline-size;
  max-width: rem(800);
  background: var(--Palette--LightGrey--80--opacity-1);
  border-radius: $paddings--medium;
  padding: rem(5);
  display: flex;
  flex-direction: column;
  position: relative;
  overflow: hidden;
  isolation: isolate;

  &:is(:not(#{$this}--isChangeActive)):hover &-ChangeOptions {
    transform: translateX(-10%);
    transition: transform .5s;
    z-index: 1;
  }

  &--isChangeActive {
    border: rem(1) dotted var(--Palette--LightViolet--100--opacity-1);
    border-radius: $paddings--medium;
  }

  &-ChangeOptions {
    border-radius: $border-radius--small;
    width: fit-content;
    position: absolute;
    top: 0;
    right: 0;
    transform: translateX(100%);
    transition: transform .5s;
    padding: rem(5);

    svg {
      height: rem(20);
      width: rem(20);
    }
  }

  &-Wrapper {
    width: 100%;
    height: fit-content;
    padding: rem(10);
    display: grid;
    position: relative;

    &--authorPosition {
      &_left {
        gap: rem(5);
        grid-template:
        ".                              change-container change-container change-container change-container " fit-content($change-container--height)
        "author                         response         response         response         response         " fit-content($response--height)
        "author                         media-container  media-container  media-container  media-container  " auto
        "author                         text             text             text             text             " fit-content($text--max-height)
        "author                         emojies          commets          date-read        date-created     " $meta-info--height
      / fit-content($author--max-width)  1fr              auto             auto             auto             ;
      }
      &_right {
        gap: rem(5);
        grid-template:
        "change-container change-container change-container change-container           . " fit-content($change-container--height)
        "response         response         response         response              author " fit-content($response--height)
        "media-container  media-container  media-container  media-container       author " auto
        "text             text             text             text                  author " fit-content($text--max-height)
        "emojies          commets          date-read        date-created          author " $meta-info--height
      /  1fr              auto             auto             auto                  fit-content($author--max-width);
      }
    }
  }
  @container (max-width: 400px) {
    &-Wrapper {
      &--authorPosition {
        &_left {
          gap: rem(5);
              grid-template:
              "author                         change-container change-container " fit-content($change-container--height)
              "response                       response         response         " fit-content($response--height)
              "media-container                media-container  media-container  " auto
              "text                           text             text             " fit-content($text--max-height)
              "emojies                        emojies          date-read        " $meta-info--height
              "commets                        .                date-created     " $meta-info--height
            / fit-content($author--max-width)  auto             auto             ;
        }
        &_right {
          gap: rem(5);
          grid-template:
                "change-container  change-container author                         " fit-content($change-container--height)
                "response          response         response                       " fit-content($response--height)
                "media-container   media-container  media-container                " auto
                "text              text             text                           " fit-content($text--max-height)
                "emojies           emojies          date-read                      " $meta-info--height
                "commets           .                date-created                   " $meta-info--height
              /  auto              auto             fit-content($author--max-width) ;
        }
      }
    }
  }
  &-Response {
    grid-area: response;
    padding: $padding;
    border-radius: $border-radius--small;
    width: 100%;
    background: rgba(97, 103, 137, 0.12)!important;
    display: flex;
    flex-direction: column;
    align-items: flex-start!important;
    gap: rem(2);
    border-left: rem(2) solid var(--Color-Border--variant-2--theme-light);
  }

  &-Author {
    grid-area: author;
    width: $author--max-width;
    aspect-ratio: 1;
    overflow: hidden;
    border-radius: 50%;
  }

  &-ChangeContainer {
    grid-area: change-container;
    background: rgba(97, 103, 137, 0.11);
    border-radius: $border-radius--super-small;
    padding: $padding;
    align-content: center;
    opacity: 0;
    transition: opacity .5s;
    display: flex;
    justify-content: space-between;

    :is(#{$this}-Wrapper--isChangeActive) & {
      opacity: 1;
      transition: opacity .5s;
    }

     svg {
      height: rem(15);
      width: rem(15);
    }

    &MainActionList {
      display: flex;
      gap: rem(5);
    }
    &SubmitActionList {
      display: flex;
      gap: rem(5);
    }
  }
  &-MediaContainer {
    grid-area: media-container;
    padding: $padding;
    display: flex;
    flex-direction: column;
    gap: rem(10);

    &ImgAddOtherButton {
      position: absolute;
      width: 25%;
      aspect-ratio: 2 / 1;
      display: flex;
      align-items: center;
      justify-content: center;
      background: var(--Color-Bcg--variant-8--theme-default);
      border-radius: $border-radius--medium;
      border: rem(2) solid var(--Color-Border--variant-1--theme-default);
      // Временно
      & > span {
        color: var(--Color-Border--variant-1--theme-default)!important;
        font-size: 3vw;
      }
    }

    &ImgFirstCurrentList {
      $gap: .5vw;

      display: flex;
      flex-wrap: wrap;
      align-items: center;
      justify-content: center;
      gap: $gap;

      & > * {
        width: calc(50% - #{$gap});
        //height: calc(50% - #{$gap});
        aspect-ratio: 3 / 2;
        position: relative;
        overflow: hidden;

        // Для случая с одним видео
        &:first-child:last-child {
          flex-basis: 100%;
          width: 100%;
          height: 100%;
        }

        // Для случая с тремя видео (третье видео занимает всю ширину)
        &:nth-child(3):last-child {
          flex-basis: 100%;
          width: 100%;
        }
      }
    }

    &ImgList {
      display: flex;
      align-items: center;
      justify-content: center;
    }

    &ImgBox {
      display: flex;
      position: relative;
      overflow: hidden;

      :is(#{$this}-Wrapper--isChangeActive) & {
        border: rem(1) dotted var(--Color-Border--variant-2--theme-default);
        padding: $paddings--super-small;
      }
    }
    &ImgButtonRemove {
      position: absolute;
      right: 0;
      top: 0;
      transform: translateX(100%);
      border: rem(1) dotted var(--Color-Border--variant-2--theme-default);
      transition: transform .5s;

      &--active {
        transform: translateX(0);
        transition: transform .5s;
        z-index: 1;
      }

      //:is(#{$this}-Wrapper--isChangeActive) & {
      //  transform: translateX(0);
      //  transition: transform .5s;
      //}
    }

    &AudioList {
      display: flex;
      flex-direction: column;
      gap: rem(5);

      audio {
        width: 100%;
        max-height: rem(30);
        flex: 1;
      }

    }

    &OtherImgContent {
      max-width: 80vw;
      max-height: 80vh;
      display: flex;
      gap: rem(10);
      flex-wrap: wrap;
      overflow-y: auto;

      & > * {
        width: 100%;
        height: 100%;
      }
    }

    // Для прочих файлов которые приложил пользователь
    &MediaOther {
      display: flex;
      flex-direction: column;
      overflow: hidden;
      align-items: flex-end;
    }
    &MediaOtherItem {
      width: fit-content;
      max-width: 100%;
    }
  }

  &-Text {
    @include scrollbarMini();
    width: 100%;
    grid-area: text;
    overflow-y: auto;
    display: flex;

    &Content {
      padding: $padding;
      display: flex;
      width: 100%;
    }
  }
  &-Emojies {
    grid-area: emojies;
    padding-left: $padding;
    padding-right: $padding;
    align-content: center;
    display: flex;
    gap: rem(3);
  }

  &-EmojieBox {
    display: flex;
    align-items: center;
    gap: rem(3);

    &--active {
      color: var(--Color-Text--variant-7--theme-default);
    }

    & > svg {
      height: 60%;
    }
  }

  &-Commets {
    grid-area: commets;
    display: flex;
    gap: rem(3);
    align-items: center;
    padding-left: $padding;
    padding-right: $padding;

    &--active {
      color: var(--Palette--LightViolet--100--opacity-1);
    }
  }
  &-DateRead {
    grid-area: date-read;
    display: flex;
    align-items: center;
    justify-content: flex-end;
    padding-left: $padding;
    padding-right: $padding;

    &Icon {
      color: rgba(117, 117, 122, 0.51);
      height: 1.1em;

      &--readable {
        color: rgb(0, 144, 246);
      }
    }
  }
  &-DateCreated {
    grid-area: date-created;
    display: flex;
    align-items: center;
    justify-content: flex-end;
    padding-left: $padding;
    padding-right: $padding;
  }
}
