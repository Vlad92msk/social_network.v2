@import "@ui/styles/for_components";

$change-container--height: rem(30);
$meta-info--height: rem(30);
$text--min-height: rem(50);
$text--max-height: rem(200);
$media-container--max-height: rem(200);
$author--max-width: rem(40);
$padding: rem(6);

.Publication {
  padding: rem(10);
  height: fit-content;
  display: grid;
  grid-template:
        ".                              change-container change-container change-container change-container            ." fit-content($change-container--height)
        "author-left                    media-container  media-container  media-container  media-container  author-right" fit-content($media-container--max-height)
        "author-left                    text             text             text             text             author-right" fit-content($text--max-height)
        "author-left                    emojies          commets          date-read        date-created     author-right" $meta-info--height
      / fit-content($author--max-width)  1fr              auto             auto             auto             fit-content($author--max-width);

  &-Author {
    background: dodgerblue;
    width: $author--max-width;
    aspect-ratio: 1;
    overflow: hidden;
    border-radius: 50%;

    &--position {
      &_left {
        grid-area: author-left;
        margin-right: rem(3);
      }
      &_right {
        grid-area: author-right;
        margin-left: rem(3);
      }
    }
  }
  &-ChangeContainer {
    grid-area: change-container;
    background: #616789;
    padding-left: $padding;
    padding-right: $padding;
    align-content: center;
    opacity: 0;
    transition: opacity .5s;

    &:hover {
      opacity: 1;
      transition: opacity .5s;
    }
  }
  &-MediaContainer {
    grid-area: media-container;
    padding: $padding;
    display: flex;
    flex-direction: column;
    gap: rem(10);

    &ImgAddOtherButton {
      position: absolute;
      height: rem(70);
      width: rem(100);
      background: var(--Color-Bcg--variant-8--theme-default);
      border-radius: $border-radius--medium;
      border: rem(2) solid var(--Color-Border--variant-1--theme-default);
      // Временно
      & > span {
        color: var(--Color-Border--variant-1--theme-default)!important;
      }
    }

    &ImgFirstCurrentList {
      $gap: rem(15);

      display: flex;
      flex-wrap: wrap;
      gap: $gap;
      width: 100%;

      & > * {
        flex-basis: calc(50% - #{$gap});
        max-width: calc(50% - #{$gap});
        height: rem(150);
        position: relative;
        overflow: hidden;

        // Для случая с одним видео
        &:first-child:last-child {
          flex-basis: 100%;
          max-width: 100%;
        }

        // Для случая с тремя видео (третье видео занимает всю ширину)
        &:nth-child(3):last-child {
          flex-basis: 100%;
          max-width: 100%;
        }
      }
    }

    &ImgList {
      display: flex;
      align-items: center;
      justify-content: center;
    }

    &ImgBox {
      display: block;
    }

    &AudioList {
      display: flex;
      flex-direction: column;

      & > audio {
        width: 100%;
        max-height: rem(30);
      }

    }

    &OtherImgContent {
      max-width: 80vw;
      max-height: 80vh;
      display: flex;
      gap: rem(10);
      flex-wrap: wrap;
      overflow-y: auto;

      & > * {
        width: 100%;
        height: 100%;
      }
    }
  }

  &-Text {
    grid-area: text;
    overflow-y: auto;
    padding: $padding;
  }
  &-Emojies {
    grid-area: emojies;
    padding-left: $padding;
    padding-right: $padding;
    align-content: center;
    display: flex;
    gap: rem(3);
  }

  &-EmojieBox {
    display: flex;
    align-items: center;
    gap: rem(3);

    & > svg {
      height: 60%;
    }
  }

  &-Commets {
    grid-area: commets;
    display: flex;
    gap: rem(3);
    align-items: center;
    padding-left: $padding;
    padding-right: $padding;
  }
  &-DateRead {
    grid-area: date-read;
    align-content: center;
    padding-left: $padding;
    padding-right: $padding;

    &Icon {
      color: rgba(117, 117, 122, 0.51);
      height: 1.1em;

      &--readable {
        color: rgb(0, 144, 246);
      }
    }
  }
  &-DateCreated {
    grid-area: date-created;
    align-content: center;
    padding-left: $padding;
    padding-right: $padding;
  }
}
