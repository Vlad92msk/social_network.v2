classDiagram
    direction LR
    class WorkerModule {
        -workerManager: WorkerManager
        -config: WorkerConfig
        -pluginManager: WorkerPluginManager
        -middlewareManager: WorkerMiddlewareManager
        +initialize(): Promise~void~
        +destroy(): Promise~void~
    }

    class WorkerManager {
        -store: StateStore
        -eventBus: SegmentedEventBus
        -strategyManager: WorkerStrategyManager
        -messageBroker: MessageBroker
        +register(worker: Worker)
        +broadcast(message: any)
    }

    class WorkerPluginManager {
        -plugins: Map~string, WorkerPlugin~
        +installPlugin(plugin: WorkerPlugin)
        +getDefaultPlugins()
        +hasPlugin(name: string)
        +getPlugin(name: string)
    }

    class WorkerMiddlewareManager {
        -middleware: WorkerMiddleware[]
        +use(middleware: WorkerMiddleware)
        +getDefaultMiddleware()
        +execute(ctx: WorkerContext)
        +remove(name: string)
    }

    class WorkerStrategyManager {
        -strategies: WorkerStrategy[]
        +addStrategy(strategy: WorkerStrategy)
        +getAvailableStrategy()
        +executeWithStrategy(task: Task)
    }

    class SyncManager {
        -store: StateStore
        -eventBus: SegmentedEventBus
        +sync()
        +getSyncState()
    }

    CoreModule <|-- WorkerModule
    WorkerModule *-- WorkerManager
    WorkerModule *-- WorkerPluginManager
    WorkerModule *-- WorkerMiddlewareManager
    WorkerManager --> StateStore
    WorkerManager --> WorkerStrategyManager
    WorkerManager --> MessageBroker
    WorkerManager --> SyncManager
    WorkerPluginManager --> Logger
    WorkerPluginManager --> SegmentedEventBus
    WorkerMiddlewareManager --> WorkerManager
