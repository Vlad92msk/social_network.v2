import { ReactNode, useEffect, useState, useMemo, useCallback } from 'react'
import { Navigate, useLocation, useParams } from 'react-router-dom'
import { useAuth } from './AuthProvider'
import { useGuardData } from './GuardProvider'
import { useGuardsExecutor } from './hooks/useGuardsExecutor'
import { callbackStorage, createFullUrl, isAuthPage } from './utils'
import { AUTH_CONSTANTS } from './constants'
import type { GuardConfig, GuardsExecutionResult, GuardContext } from './types'

interface ProtectedRouteProps {
  children: ReactNode
  fallback?: ReactNode

  // Guards —Å–∏—Å—Ç–µ–º–∞
  guards?: GuardConfig[]
  globalTimeout?: number
  onGuardsComplete?: (result: GuardsExecutionResult) => void

  // –û–±—Ä–∞—Ç–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å
  requireAuth?: boolean
  onAccessDenied?: (reason: string) => void
}

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∑–∞—â–∏—â–µ–Ω–Ω–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π guards
 */
export function ProtectedRoute({
  children,
  fallback,
  guards = [],
  globalTimeout = AUTH_CONSTANTS.DEFAULT_GUARD_TIMEOUT,
  onGuardsComplete,
  requireAuth = true,
  onAccessDenied
}: ProtectedRouteProps) {
  const { user, isAuthenticated, isLoading, config } = useAuth()
  const { guardData } = useGuardData()
  const location = useLocation()
  const params = useParams()

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ö—É–∫ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è guards
  const { execute: executeGuards, isExecuting, currentGuard } = useGuardsExecutor(globalTimeout)

  const [guardsResult, setGuardsResult] = useState<GuardsExecutionResult | null>(null)
  const [lastExecutionKey, setLastExecutionKey] = useState<string>('')

  // –°—Ç–∞–±–∏–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
  const pathname = location.pathname
  const search = location.search
  const hasGuards = guards.length > 0
  const authPages = config.authPages || [...AUTH_CONSTANTS.DEFAULT_AUTH_PAGES]

  // –°–æ–∑–¥–∞–µ–º —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –∫–ª—é—á –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è guards
  const executionKey = useMemo(() => {
    if (!hasGuards) return 'no-guards'
    return `${pathname}-${search}-${isAuthenticated}-${JSON.stringify(guards.map(g => g.id))}`
  }, [pathname, search, isAuthenticated, hasGuards, guards])

  // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è guards
  const guardContext = useMemo((): GuardContext => ({
    user,
    isAuthenticated,
    route: {
      pathname,
      params,
      search,
      state: location.state
    },
    data: guardData
  }), [user, isAuthenticated, pathname, params, search, location.state, guardData])

  // –§—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è guards
  const runGuards = useCallback(async () => {
    if (!hasGuards) {
      setGuardsResult(null)
      setLastExecutionKey(executionKey)
      return
    }

    try {
      const result = await executeGuards(guards, guardContext)
      setGuardsResult(result)
      setLastExecutionKey(executionKey)

      onGuardsComplete?.(result)

      if (!result.allowed && onAccessDenied && result.failedGuards.length > 0) {
        onAccessDenied(result.failedGuards[0].reason)
      }
    } catch (error) {
      console.error('Guards execution failed:', error)
      setGuardsResult({
        allowed: false,
        failedGuards: [{
          id: 'system',
          reason: '–°–∏—Å—Ç–µ–º–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞',
          config: {} as GuardConfig
        }],
        executedGuards: [],
        skippedGuards: [],
        executionTime: 0
      })
      setLastExecutionKey(executionKey)
    }
  }, [hasGuards, executeGuards, guards, guardContext, onGuardsComplete, onAccessDenied, executionKey])

  // –û—Å–Ω–æ–≤–Ω–æ–π useEffect
  useEffect(() => {
    // –ï—Å–ª–∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è - –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
    if (isLoading) return

    // –ï—Å–ª–∏ –∫–ª—é—á –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è - –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω–æ
    if (lastExecutionKey === executionKey) return

    // –û–±—Ä–∞—Ç–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å - –±–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    if (requireAuth && !isAuthenticated) {
      const currentUrl = createFullUrl(pathname, search)
      const existingCallbackUrl = callbackStorage.get()

      if (!isAuthPage(currentUrl, authPages) && !existingCallbackUrl) {
        callbackStorage.set(currentUrl)
      }
      return
    }

    // –ó–∞–ø—É—Å–∫–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ guards
    runGuards()
  }, [
    isLoading,
    requireAuth,
    isAuthenticated,
    runGuards,
    executionKey,
    lastExecutionKey,
    pathname,
    search,
    authPages
  ])

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–∞–¥–µ—Ä
  if (isLoading || isExecuting) {
    const message = isLoading
      ? AUTH_CONSTANTS.MESSAGES.CHECKING_AUTH
      : `${AUTH_CONSTANTS.MESSAGES.CHECKING_ACCESS}${currentGuard ? ': ' + currentGuard : ''}`

    return (
      fallback || (
        <div className="flex flex-col items-center justify-center min-h-[200px]">
          <div className={`${AUTH_CONSTANTS.LOADER_SIZE} border-4 ${AUTH_CONSTANTS.LOADER_COLORS} rounded-full animate-spin mb-4`} />
          <p className="text-gray-600">{message}</p>
        </div>
      )
    )
  }

  // –†–µ–¥–∏—Ä–µ–∫—Ç –¥–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö
  if (requireAuth && !isAuthenticated) {
    return <Navigate to={config.redirects.whenUnauthenticated} replace />
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–∫–∞–∑–∞ –≤ –¥–æ—Å—Ç—É–ø–µ
  if (guardsResult && !guardsResult.allowed) {
    const firstFailedGuard = guardsResult.failedGuards[0]

    if (firstFailedGuard) {
      const guardConfig = firstFailedGuard.config

      // –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ –∫–∞—Å—Ç–æ–º–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
      if (guardConfig.accessDeniedPage) {
        return (
          <Navigate
            to={guardConfig.accessDeniedPage}
            state={{
              reason: firstFailedGuard.reason,
              guardId: firstFailedGuard.id,
              metadata: firstFailedGuard.metadata
            }}
            replace
          />
        )
      }

      // –ü–æ–∫–∞–∑ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
      if (guardConfig.accessDeniedComponent) {
        return <>{guardConfig.accessDeniedComponent}</>
      }
    }

    // –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Ä–µ–¥–∏—Ä–µ–∫—Ç
    if (config.redirects.onAccessDenied) {
      return (
        <Navigate
          to={config.redirects.onAccessDenied}
          state={{
            reason: firstFailedGuard?.reason || '–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω',
            failedGuards: guardsResult.failedGuards
          }}
          replace
        />
      )
    }

    // –î–µ—Ñ–æ–ª—Ç–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
    return (
      <div className="flex flex-col items-center justify-center min-h-[400px] p-8">
        <div className="text-center max-w-md">
          <div className="text-red-500 text-6xl mb-4">üö´</div>
          <h2 className="text-2xl font-bold text-gray-800 mb-4">
            {AUTH_CONSTANTS.MESSAGES.ACCESS_DENIED}
          </h2>
          <p className="text-gray-600 mb-6">
            {firstFailedGuard?.reason || '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã'}
          </p>
          <div className="space-y-3">
            <button
              onClick={() => window.history.back()}
              className="w-full px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700"
            >
              –ù–∞–∑–∞–¥
            </button>
            <button
              onClick={() => window.location.href = '/'}
              className="w-full px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700"
            >
              –ù–∞ –≥–ª–∞–≤–Ω—É—é
            </button>
          </div>
        </div>
      </div>
    )
  }

  return <>{children}</>
}
