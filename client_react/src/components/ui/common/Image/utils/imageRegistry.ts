/**
 * –†–µ–≥–∏—Å—Ç—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π - —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –ø—Ä–æ–µ–∫—Ç–∞
 */

/**
 * Vite: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–∑ –ø–∞–ø–∫–∏ assets/images
 */
const imageModules = import.meta.glob('/src/assets/images/**/*.{png,jpg,jpeg,webp,avif,gif,svg}', {
  eager: true,
  as: 'url'
});

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—É—Ç–µ–π –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
 */
export const images = Object.entries(imageModules).reduce(
  (acc, [path, url]) => {
    // –£–±–∏—Ä–∞–µ–º '/src/assets/images/' –≤ –Ω–∞—á–∞–ª–µ –∏ –ø–æ–ª—É—á–∞–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å
    const relativePath = path.replace('/src/assets/images/', '');

    // –ü—É—Ç—å –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
    const keyWithoutExt = relativePath.replace(/\.(png|jpe?g|webp|avif|gif|svg)$/i, '');

    return {
      ...acc,
      [keyWithoutExt]: url as string,
      [relativePath]: url as string, // –¢–∞–∫–∂–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º
    };
  },
  {} as Record<string, string>,
);

/**
 * –ü–æ–ª—É—á–∞–µ—Ç URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ –ø—É—Ç–∏
 */
export const getImageSrc = (imagePath: string): string | null => {
  return images[imagePath] || null;
};

/**
 * –ü–æ–ª—É—á–∞–µ—Ç WebP –≤–µ—Ä—Å–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
 */
export const getWebpImageSrc = (imagePath: string): string | null => {
  const webpPath = `${imagePath}.webp`;
  return images[webpPath] || null;
};

/**
 * –ü–æ–ª—É—á–∞–µ—Ç AVIF –≤–µ—Ä—Å–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
 */
export const getAvifImageSrc = (imagePath: string): string | null => {
  const avifPath = `${imagePath}.avif`;
  return images[avifPath] || null;
};

/**
 * –ü–æ–ª—É—á–∞–µ—Ç SVG –≤–µ—Ä—Å–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
 */
export const getSvgImageSrc = (imagePath: string): string | null => {
  const svgPath = `${imagePath}.svg`;
  return images[svgPath] || null;
};

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
 */
export const getImageFormats = (imagePath: string) => {
  return {
    avif: getAvifImageSrc(imagePath),
    webp: getWebpImageSrc(imagePath),
    svg: getSvgImageSrc(imagePath),
    main: getImageSrc(imagePath),
  };
};

/**
 * –û—Ç–ª–∞–¥–∫–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
 */
export const debugImages = () => {
  console.group('üñºÔ∏è Image Registry Debug');
  console.log('Total files found:', Object.keys(imageModules).length);
  console.log('Processed keys:', Object.keys(images).filter(key => !key.includes('.')).length);
  console.log('Available images:', Object.keys(images).filter(key => !key.includes('.')));
  console.log('Full registry:', images);
  console.groupEnd();
};
